targetPackage: zhy2002.examples.lodgement
rootType:
  typeName: ApplicationNode
  baseTypeName: ObjectUiNode
  properties:
  - {name: showErrorList, typeName: Boolean, default: Boolean.FALSE}
  - {name: contentLevel, externalTypeName: int, typeName: Integer, default: 1}
  init:
  - {propertyName: selectedName, value: '"personListNode"'}
  - {propertyName: contentLevel, mode: Value}
  rules:
  - {typeName: CreateErrorNodeRule, baseTypeName: BaseCreateErrorNodeRule}
  - {typeName: ShowErrorListRule}
  children:
  - {typeName: PersonListNode}
  - {typeName: CompanyListNode}
  - {typeName: FinancialPositionNode}
  - {typeName: RealEstateListNode}
  - {typeName: ProductsNode}
  - {typeName: AdditionalNode}
  - {typeName: SubmissionNode}
  - {typeName: ErrorListNode}
  childTypes:
  - typeName: PersonListNode
    baseTypeName: ListUiNode
    itemTypeName: PersonNode
    init:
    - {propertyName: selectedIndex, value: 0}
    - {propertyName: nodeLabel, value: '"Person Applicant"'}
    childTypes:
    - typeName: PersonNode
      baseTypeName: ObjectUiNode
      init:
      - {propertyName: selectedName, value: '"generalNode"'}
      children:
      - {typeName: GeneralNode}
      - {typeName: ContactNode}
      - {typeName: CurrentEmploymentListNode}
      - {typeName: PreviousEmploymentListNode}
      childTypes:
      - typeName: GeneralNode
        baseTypeName: ObjectUiNode
        children:
        - {typeName: TitleNode}
        - {typeName: FirstNameNode}
        - {typeName: LastNameNode}
        - {typeName: GenderNode}
        - {typeName: DateOfBirthNode}
        - {typeName: PrimaryApplicantFlagNode}
        - {typeName: DriversLicenseNode}
        - {typeName: ApplicantTypeNode}
        - {typeName: ApplicationTypeNode}
        - {typeName: MaritalStatusNode}
        - {typeName: PermanentResidentFlagNode}
        - {typeName: SpouseNode}
        - {typeName: FirstHomeBuyerFlagNode}
        - {typeName: HousingStatusNode}
        childTypes:
        - typeName: TitleNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.TITLE_TYPE.toArray()'}
          - {propertyName: required, value: 'true'}
          rules:
          - {typeName: TitleGenderMatchRule, baseTypeName: ValidationRule}

        - typeName: FirstNameNode
          baseTypeName: StringUiNode
          init:
          - {propertyName: required, value: 'true'}
          - {propertyName: pattern, value: ApplicationNodeConstants.NAME_PATTERN}

        - typeName: LastNameNode
          baseTypeName: StringUiNode
          init:
          - {propertyName: required, value: 'true'}
          - {propertyName: pattern, value: ApplicationNodeConstants.NAME_PATTERN}

        - typeName: GenderNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.GENDER_TYPE.toArray()'}
          - {propertyName: required, value: 'true'}

        - typeName: DateOfBirthNode
          baseTypeName: StringUiNode
          init:
          - {propertyName: required, value: 'true'}

        - typeName: PrimaryApplicantFlagNode
          baseTypeName: BooleanUiNode
          rules:
          - {typeName: AtLeastOnePrimaryApplicantRule, baseTypeName: ValidationRule}

        - typeName: DriversLicenseNode
          baseTypeName: StringUiNode

        - typeName: ApplicantTypeNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.APPLICANT_TYPE.toArray()'}
          - {propertyName: required, value: 'true'}

        - typeName: ApplicationTypeNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.APPLICATION_TYPE.toArray()'}
          - {propertyName: required, value: 'true'}

        - typeName: MaritalStatusNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.MARITAL_STATUS.toArray()'}
          - {propertyName: required, value: 'true'}

        - typeName: PermanentResidentFlagNode
          baseTypeName: BooleanUiNode

        - typeName: SpouseNode
          baseTypeName: StringUiNode

        - typeName: FirstHomeBuyerFlagNode
          baseTypeName: BooleanUiNode
          init:
          - {propertyName: required, value: 'true'}

        - typeName: HousingStatusNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.HOUSING_STATUS.toArray()'}
          - {propertyName: required, value: 'true'}

      - typeName: ContactNode
        baseTypeName: ObjectUiNode
        rules:
        - {typeName: HomeOrWorkPhoneRequiredRule}
        children:
        - {typeName: ContactTelephoneNode, name: homePhoneNode}
        - {typeName: ContactTelephoneNode, name: workPhoneNode}
        - {typeName: ContactTelephoneNode, name: faxNumberNode}
        - {typeName: MobileNumberNode}
        - {typeName: ContactEmailNode}
        - {typeName: ContactAddressNode, name: currentAddressNode}
        - {typeName: ContactMonthYearNode, name: movedToCurrentAddressNode}
        - {typeName: ContactAddressNode, name: postalAddressNode}
        - {typeName: ContactAddressNode, name: previousAddressNode}
        - {typeName: ContactMonthYearNode, name: movedToPreviousAddressNode}
        - {typeName: ContactMonthYearNode, name: movedFromPreviousAddressNode}
        childTypes:
        - typeName: ContactTelephoneNode
          baseTypeName: TelephoneNode

        - typeName: MobileNumberNode
          baseTypeName: StringUiNode

        - typeName: ContactAddressNode
          baseTypeName: AddressNode

        - typeName: ContactMonthYearNode
          baseTypeName: MonthYearNode

        - typeName: ContactEmailNode
          baseTypeName: EmailNode
          init:
          - {propertyName: required, value: 'true'}

      - typeName: CurrentEmploymentListNode
        baseTypeName: ListUiNode
        itemTypeName: CurrentEmploymentNode
        init:
        - {propertyName: nodeLabel, value: '"Current Employment"'}
        childTypes:
        - typeName: CurrentEmploymentNode
          baseTypeName: EmploymentNode
          init:
          - {propertyName: nodeLabel, value: '"Employment"'}

      - typeName: PreviousEmploymentListNode
        baseTypeName: ListUiNode
        itemTypeName: PreviousEmploymentNode
        init:
        - {propertyName: nodeLabel, value: '"Previous Employment"'}
        childTypes:
        - typeName: PreviousEmploymentNode
          baseTypeName: EmploymentNode
          init:
          - {propertyName: nodeLabel, value: '"Employment"'}

  - typeName: CompanyListNode
    baseTypeName: ListUiNode
    itemTypeName: CompanyNode
    childTypes:
    - typeName: CompanyNode
      baseTypeName: ObjectUiNode
      children: []

  - typeName: FinancialPositionNode
    baseTypeName: ObjectUiNode
    children: []

  - typeName: RealEstateListNode
    baseTypeName: ListUiNode
    itemTypeName: RealEstateNode
    childTypes:
    - typeName: RealEstateNode
      baseTypeName: ObjectUiNode
      children: []

  - typeName: ProductsNode
    baseTypeName: ObjectUiNode
    children: []

  - typeName: AdditionalNode
    baseTypeName: ObjectUiNode
    children: []

  - typeName: SubmissionNode
    baseTypeName: ObjectUiNode
    children: []

  - typeName: ErrorListNode
    baseTypeName: ListUiNode
    itemTypeName: ErrorNode
    properties:
    - {name: focus, typeName: String}
    init:
    - {propertyName: focus, mode: Always}
    rules:
    - {typeName: ChangeFocusErrorRule}
    childTypes:
    - typeName: ErrorNode
      baseTypeName: LeafUiNode
      valueTypeName: ValidationError
      valueWrappers:
      - {name: source, typeName: 'UiNode<?>', wrap: origin}
      - {name: message, typeName: String}
      - {name: rule, typeName: 'UiNodeRule<?>', jsIgnore: true}

#nodes that do not know the concrete type of their parent
commonTypes:
- typeName: TelephoneNode
  baseTypeName: LeafUiNode
  valueTypeName: Telephone
  generateEvent: true
  isAbstract: true
  parentBaseTypeName: ParentUiNode<?>
  rules:
  - {typeName: TelephoneCompleteRule, baseTypeName: ValidationRule}

- typeName: AddressNode
  baseTypeName: ObjectUiNode
  isAbstract: true
  parentBaseTypeName: ParentUiNode<?>
  localRequired: true
  children:
  - {typeName: AddressLineNode}
  - {typeName: SuburbNode}
  - {typeName: PostcodeNode}
  - {typeName: CountryNode}
  childTypes:
  - typeName: AddressLineNode
    baseTypeName: StringUiNode
    init:
    - {propertyName: required, value: 'true'}

  - typeName: SuburbNode
    baseTypeName: StringUiNode
    init:
    - {propertyName: required, value: 'true'}

  - typeName: PostcodeNode
    baseTypeName: StringUiNode
    init:
    - {propertyName: required, value: 'true'}
    - {propertyName: pattern, value: '"\\d{4,4}"'}

  - typeName: CountryNode
    baseTypeName: StringUiNode
    properties:
    - {name: options, typeName: Object}
    init:
    - {propertyName: options, value: ApplicationNodeConstants.COUNTRY_TYPE.toArray()}
    - {propertyName: required, value: 'true'}

- typeName: MonthYearNode
  baseTypeName: ObjectUiNode
  isAbstract: true
  parentBaseTypeName: ParentUiNode<?>
  localRequired: true
  children:
  - {typeName: MonthNode}
  - {typeName: YearNode}
  childTypes:
  - typeName: MonthNode
    baseTypeName: BigDecimalUiNode
    properties:
    - {name: options, typeName: Object}
    init:
    - {propertyName: required, value: 'true'}
    - {propertyName: options, value: ApplicationNodeConstants.MONTH_TYPE.toArray()}

  - typeName: YearNode
    baseTypeName: BigDecimalUiNode
    properties:
    - {name: options, typeName: Object}
    init:
    - {propertyName: required, value: 'true'}
    - {propertyName: options, value: ApplicationNodeConstants.getYearType().toArray()}

- typeName: EmailNode
  baseTypeName: StringUiNode
  isAbstract: true
  parentBaseTypeName: ParentUiNode<?>
  init:
  - {propertyName: pattern, value: '"\\w+@\\w+\\.[\\w.]+"'}

- typeName: EmploymentNode
  baseTypeName: ObjectUiNode
  isAbstract: true
  parentBaseTypeName: ParentUiNode<?>
  localRequired: true
  children:
  - {typeName: EmploymentTypeNode}
  - {typeName: PayeEmployedNode}
  - {typeName: SelfEmployedNode}
  - {typeName: UnemployedNode}
  - {typeName: RetiredEmploymentNode}
  childTypes:
  - typeName: EmploymentTypeNode
    baseTypeName: StringUiNode
    properties:
    - {name: options, typeName: Object}
    init:
    - {propertyName: options, value: 'ApplicationNodeConstants.EMPLOYMENT_TYPE.toArray()'}
    - {propertyName: value, value: '"payeEmployedNode"'}
    rules:
    - {typeName: EmploymentTypeChangedRule}
  - typeName: PayeEmployedNode
    baseTypeName: EmployedNode
    children:
    - {typeName: GrossYearlySalaryNode}
    childTypes:
    - typeName: GrossYearlySalaryNode
      baseTypeName: BigDecimalUiNode
      init:
      - {propertyName: required, value: 'true'}

  - typeName: SelfEmployedNode
    baseTypeName: EmployedNode
    children:
    - {typeName: BusinessTypeNode}
    - {typeName: ProfitThisYearNode}
    - {typeName: ProfitPreviousYearNode}
    childTypes:
    - typeName: BusinessTypeNode
      baseTypeName: StringUiNode

    - typeName: ProfitThisYearNode
      baseTypeName: BigDecimalUiNode
      init:
      - {propertyName: required, value: 'true'}

    - typeName: ProfitPreviousYearNode
      baseTypeName: BigDecimalUiNode
      init:
      - {propertyName: required, value: 'true'}

  - typeName: EmployedNode
    baseTypeName: ObjectUiNode
    isAbstract: true
    children:
    - {typeName: EmploymentStatusNode}
    - {typeName: OccupationNode}
    - {typeName: EmployerNameNode}
    - {typeName: EmployerAddressNode}
    - {typeName: EmployerPhoneNode}
    - {typeName: EmploymentStartedNode}
    - {typeName: EmploymentEndedNode}

    childTypes:
    - typeName: EmploymentStatusNode
      baseTypeName: StringUiNode
      properties:
      - {name: options, typeName: Object}
      init:
      - {propertyName: options, value: 'ApplicationNodeConstants.EMPLOYMENT_STATUS.toArray()'}
      - {propertyName: required, value: 'true'}

    - typeName: OccupationNode
      baseTypeName: BaseOccupationNode
      init:
      - {propertyName: required, value: 'true'}

    - typeName: EmployerNameNode
      baseTypeName: StringUiNode
      init:
      - {propertyName: required, value: 'true'}

    - typeName: EmployerAddressNode
      baseTypeName: AddressNode
      init:
      - {propertyName: required, value: 'true'}

    - typeName: EmployerPhoneNode
      baseTypeName: TelephoneNode
      init:
      - {propertyName: required, value: 'true'}

    - typeName: EmploymentStartedNode
      baseTypeName: MonthYearNode
      init:
      - {propertyName: required, value: 'true'}

    - typeName: EmploymentEndedNode
      baseTypeName: MonthYearNode
      init:
      - {propertyName: required, value: 'true'}

  - typeName: UnemployedNode
    baseTypeName: ObjectUiNode
    children:
    - {typeName: UnemployedOnBenefitFlagNode}
    - {typeName: StudentFlagNode}
    - {typeName: StudentTypeNode}
    - {typeName: HouseDutiesFlagNode}
    - {typeName: UnemployedSinceNode}
    childTypes:
    - typeName: UnemployedOnBenefitFlagNode
      baseTypeName: YesNoFlagNode
      init:
      - {propertyName: required, value: 'true'}

    - typeName: StudentFlagNode
      baseTypeName: YesNoFlagNode
      init:
      - {propertyName: required, value: 'true'}

    - typeName: StudentTypeNode
      baseTypeName: StringUiNode
      properties:
      - {name: options, typeName: Object}
      init:
      - {propertyName: options, value: 'ApplicationNodeConstants.STUDENT_TYPE.toArray()'}

    - typeName: HouseDutiesFlagNode
      baseTypeName: YesNoFlagNode
      init:
      - {propertyName: required, value: 'true'}

    - typeName: UnemployedSinceNode
      baseTypeName: MonthYearNode
      init:
      - {propertyName: required, value: 'true'}

  - typeName: RetiredEmploymentNode
    baseTypeName: ObjectUiNode
    children:
    - {typeName: RetiredOnBenefitFlagNode}
    - {typeName: RetiredSinceNode}
    childTypes:
    - typeName: RetiredOnBenefitFlagNode
      baseTypeName: YesNoFlagNode
      init:
      - {propertyName: required, value: 'true'}

    - typeName: RetiredSinceNode
      baseTypeName: MonthYearNode
      init:
      - {propertyName: required, value: 'true'}

- typeName: BaseOccupationNode
  baseTypeName: StringUiNode
  isAbstract: true
  parentBaseTypeName: ParentUiNode<?>

- typeName: YesNoFlagNode
  baseTypeName: StringUiNode
  isAbstract: true
  parentBaseTypeName: ParentUiNode<?>
  properties:
  - {name: options, typeName: Object}
  init:
  - {propertyName: options, value: 'ApplicationNodeConstants.YES_NO_TYPE.toArray()'}
