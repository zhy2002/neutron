targetPackage: zhy2002.examples.lodgement
rootType:
  typeName: ApplicationNode
  baseTypeName: ObjectUiNode
  properties:
  - {name: showErrorList, typeName: Boolean, default: Boolean.FALSE}
  rules:
  - {typeName: CreateErrorNodeRule, baseTypeName: BaseCreateErrorNodeRule}
  - {typeName: ShowErrorListRule}
  children:
  - {typeName: PersonListNode}
  - {typeName: CompanyListNode}
  - {typeName: FinancialPositionNode}
  - {typeName: RealEstateListNode}
  - {typeName: ProductsNode}
  - {typeName: AdditionalNode}
  - {typeName: SubmissionNode}
  - {typeName: ErrorListNode}
  childTypes:
  - typeName: PersonListNode
    baseTypeName: ListUiNode
    itemTypeName: PersonNode
    init:
    - {propertyName: selectedIndex, value: 0}
    properties:
    - {name: selectedIndex, externalTypeName: int, default: 0}
    rules:
    - {typeName: UpdateSelectedIndexRule}
    childTypes:
    - typeName: PersonNode
      baseTypeName: ObjectUiNode
      init:
      - {propertyName: selectedName, value: '"generalNode"'}
      properties:
      - {name: selectedName, typeName: String, default: '"generalNode"'}
      children:
      - {typeName: GeneralNode}
      - {typeName: ContactNode}
      - {typeName: CurrentEmploymentNode}
      childTypes:
      - typeName: GeneralNode
        baseTypeName: ObjectUiNode
        children:
        - {typeName: TitleNode}
        - {typeName: FirstNameNode}
        - {typeName: LastNameNode}
        - {typeName: GenderNode}
        - {typeName: DateOfBirthNode}
        - {typeName: PrimaryApplicantFlagNode}
        - {typeName: DriversLicenseNode}
        - {typeName: ApplicantTypeNode}
        - {typeName: ApplicationTypeNode}
        - {typeName: MaritalStatusNode}
        - {typeName: PermanentResidentFlagNode}
        - {typeName: SpouseNode}
        - {typeName: FirstHomeBuyerFlagNode}
        - {typeName: HousingStatusNode}
        childTypes:
        - typeName: TitleNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.TITLE_TYPE.toArray()'}
          - {propertyName: required, value: 'true'}

        - typeName: FirstNameNode
          baseTypeName: StringUiNode
          init:
          - {propertyName: required, value: 'true'}
          - {propertyName: pattern, value: ApplicationNodeConstants.NAME_PATTERN}

        - typeName: LastNameNode
          baseTypeName: StringUiNode
          init:
          - {propertyName: required, value: 'true'}
          - {propertyName: pattern, value: ApplicationNodeConstants.NAME_PATTERN}

        - typeName: GenderNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.GENDER_TYPE.toArray()'}
          - {propertyName: required, value: 'true'}

        - typeName: DateOfBirthNode
          baseTypeName: StringUiNode
          init:
          - {propertyName: required, value: 'true'}

        - typeName: PrimaryApplicantFlagNode
          baseTypeName: BooleanUiNode
          rules:
          - {typeName: AtLeastOnePrimaryApplicantRule, baseTypeName: ValidationRule}

        - typeName: DriversLicenseNode
          baseTypeName: StringUiNode

        - typeName: ApplicantTypeNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.APPLICANT_TYPE.toArray()'}
          - {propertyName: required, value: 'true'}

        - typeName: ApplicationTypeNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.APPLICATION_TYPE.toArray()'}
          - {propertyName: required, value: 'true'}

        - typeName: MaritalStatusNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.MARITAL_STATUS.toArray()'}
          - {propertyName: required, value: 'true'}

        - typeName: PermanentResidentFlagNode
          baseTypeName: BooleanUiNode

        - typeName: SpouseNode
          baseTypeName: StringUiNode

        - typeName: FirstHomeBuyerFlagNode
          baseTypeName: BooleanUiNode
          init:
          - {propertyName: required, value: 'true'}

        - typeName: HousingStatusNode
          baseTypeName: StringUiNode
          properties:
          - {name: options, typeName: Object}
          init:
          - {propertyName: options, value: 'ApplicationNodeConstants.HOUSING_STATUS.toArray()'}
          - {propertyName: required, value: 'true'}

      - typeName: ContactNode
        baseTypeName: ObjectUiNode
        children: []

      - typeName: CurrentEmploymentNode
        baseTypeName: ObjectUiNode
        children: []

  - typeName: CompanyListNode
    baseTypeName: ListUiNode
    itemTypeName: CompanyNode
    childTypes:
    - typeName: CompanyNode
      baseTypeName: ObjectUiNode
      children: []

  - typeName: FinancialPositionNode
    baseTypeName: ObjectUiNode
    children: []

  - typeName: RealEstateListNode
    baseTypeName: ListUiNode
    itemTypeName: RealEstateNode
    childTypes:
    - typeName: RealEstateNode
      baseTypeName: ObjectUiNode
      children: []

  - typeName: ProductsNode
    baseTypeName: ObjectUiNode
    children: []

  - typeName: AdditionalNode
    baseTypeName: ObjectUiNode
    children: []

  - typeName: SubmissionNode
    baseTypeName: ObjectUiNode
    children: []

  - typeName: ErrorListNode
    baseTypeName: ListUiNode
    itemTypeName: ErrorNode
    properties:
    - {name: focus, typeName: String}
    rules:
    - {typeName: ChangeFocusErrorRule}
    childTypes:
    - typeName: ErrorNode
      baseTypeName: LeafUiNode
      valueTypeName: ValidationError
      valueWrappers:
      - {name: source, typeName: 'UiNode<?>', wrap: origin}
      - {name: message, typeName: String}
      - {name: rule, typeName: 'UiNodeRule<?>', jsIgnore: true}


